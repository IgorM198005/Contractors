<Page
    x:Class="Contractors.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Contractors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" SizeChanged="Page_SizeChanged" KeyDown="popUp_KeyDown">

    <Page.Resources>
        <Style x:Key="ListViewItemNormalStyle" TargetType="ListViewItem">
            <Setter Property="Margin" Value="0,4,0,0"/>
            <Setter Property="Padding" Value="4,4,4,4"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter 
                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                  SelectionCheckMarkVisualEnabled="true"
                                                  CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                  CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                  DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                                  DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                                  FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                                                  FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                                  PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                                  PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                                                  PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"                                                           
                                                  PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"                                                  
                                                  DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                                  DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                                  ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  ContentMargin="{TemplateBinding Padding}"
                                                  CheckMode="Inline"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ExpandedBorderBrush" Color="Silver" Opacity="0.7"/>
        <Style x:Name="ImpListviewStyle" TargetType="ListView">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="TabNavigation" Value="Once" />
            <Setter Property="IsSwipeEnabled" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <AddDeleteThemeTransition />
                        <ContentThemeTransition />
                        <ReorderThemeTransition />
                        <EntranceThemeTransition IsStaggeringEnabled="False" />
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="ScrollViewer" Style="{StaticResource ImpScrollViewStyle}"
                        TabNavigation="{TemplateBinding TabNavigation}"
                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                        IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                        IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                        IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                        IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                        ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                        IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                        BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                        AutomationProperties.AccessibilityView="Raw">
                                <ItemsPresenter
                Header="{TemplateBinding Header}"
                HeaderTemplate="{TemplateBinding HeaderTemplate}"
                HeaderTransitions="{TemplateBinding HeaderTransitions}"
                Footer="{TemplateBinding Footer}"
                FooterTemplate="{TemplateBinding FooterTemplate}"
                FooterTransitions="{TemplateBinding FooterTransitions}"
                Padding="{TemplateBinding Padding}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="NormalListViewItemTemplate" x:DataType="local:Contractor">
            <UserControl>
                <Grid>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup>
                            <VisualState x:Name="HasPhone">
                                <VisualState.StateTriggers>
                                    <local:IsTrueStateTrigger Value="{Binding HasPhone, Mode=OneWay}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="rwMargin0.Height" Value="8" />
                                    <Setter Target="tblPhoneprp.Visibility" Value="Visible" />
                                    <Setter Target="tblPhonevalue.Visibility" Value="Visible" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="NoPhone">
                                <VisualState.StateTriggers>
                                    <local:IsFalseStateTrigger Value="{Binding HasPhone, Mode=OneWay}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="rwMargin0.Height" Value="0" />
                                    <Setter Target="tblPhoneprp.Visibility" Value="Collapsed" />
                                    <Setter Target="tblPhonevalue.Visibility" Value="Collapsed" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup>
                            <VisualState x:Name="HasEmail">
                                <VisualState.StateTriggers>
                                    <local:IsTrueStateTrigger Value="{Binding HasEmail, Mode=OneWay}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="rwMargin1.Height" Value="8" />
                                    <Setter Target="tblEmailprp.Visibility" Value="Visible" />
                                    <Setter Target="tblEmailvalue.Visibility" Value="Visible" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="NoEmail">
                                <VisualState.StateTriggers>
                                    <local:IsFalseStateTrigger Value="{Binding HasEmail, Mode=OneWay}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="rwMargin1.Height" Value="0" />
                                    <Setter Target="tblEmailprp.Visibility" Value="Collapsed" />
                                    <Setter Target="tblEmailvalue.Visibility" Value="Collapsed" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup>
                            <VisualState x:Name="HasWeb">
                                <VisualState.StateTriggers>
                                    <local:IsTrueStateTrigger Value="{Binding HasWeb, Mode=OneWay}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="tblWebprp.Visibility" Value="Visible" />
                                    <Setter Target="tblWebvalue.Visibility" Value="Visible" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="NoWeb">
                                <VisualState.StateTriggers>
                                    <local:IsFalseStateTrigger Value="{Binding HasWeb, Mode=OneWay}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="tblWebprp.Visibility" Value="Collapsed" />
                                    <Setter Target="tblWebvalue.Visibility" Value="Collapsed" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup>
                            <VisualState x:Name="HasAddress">
                                <VisualState.StateTriggers>
                                    <local:IsTrueStateTrigger Value="{Binding HasAddress, Mode=OneWay}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="grdAddress.Visibility" Value="Visible" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="NoAddress">
                                <VisualState.StateTriggers>
                                    <local:IsFalseStateTrigger Value="{Binding HasAddress, Mode=OneWay}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Target="grdAddress.Visibility" Value="Collapsed" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="SlimOrNormal">
                            <VisualState x:Name="Wide">
                                <VisualState.Setters>
                                    <Setter Target="grRoot.Margin" Value="0,8,0,8" />
                                    <Setter Target="NameCol.Width" Value="3*" />
                                    <Setter Target="MarginCol.Width" Value="12" />
                                    <Setter Target="ContactCol.Width" Value="2*" />
                                    <Setter Target="MarginColAgain.Width" Value="12" />
                                    <Setter Target="AddressCol.Width" Value="2*" />
                                    <Setter Target="grdContacts.Visibility" Value="Visible" />
                                    <Setter Target="grdAddressl0.Visibility" Value="Visible" />
                                </VisualState.Setters>
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="700"/>
                                </VisualState.StateTriggers>
                            </VisualState>
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Target="grRoot.Margin" Value="0,8,0,8" />
                                    <Setter Target="NameCol.Width" Value="3*" />
                                    <Setter Target="MarginCol.Width" Value="12" />
                                    <Setter Target="ContactCol.Width" Value="2*" />
                                    <Setter Target="MarginColAgain.Width" Value="0" />
                                    <Setter Target="AddressCol.Width" Value="0" />
                                    <Setter Target="grdContacts.Visibility" Value="Visible" />
                                    <Setter Target="grdAddressl0.Visibility" Value="Collapsed" />
                                </VisualState.Setters>
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="500"/>
                                </VisualState.StateTriggers>
                            </VisualState>
                            <VisualState x:Name="Slim">
                                <VisualState.Setters>
                                    <Setter Target="grRoot.Margin" Value="0" />
                                    <Setter Target="NameCol.Width" Value="*" />
                                    <Setter Target="MarginCol.Width" Value="0" />
                                    <Setter Target="ContactCol.Width" Value="0" />
                                    <Setter Target="MarginColAgain.Width" Value="0" />
                                    <Setter Target="AddressCol.Width" Value="0" />
                                    <Setter Target="grdContacts.Visibility" Value="Collapsed" />
                                    <Setter Target="grdAddressl0.Visibility" Value="Collapsed" />
                                </VisualState.Setters>
                                <VisualState.StateTriggers>
                                    <AdaptiveTrigger MinWindowWidth="0"/>
                                </VisualState.StateTriggers>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid x:Name="grRoot">
                        <Grid.Resources>
                            <Style x:Key="ContactsValueV0TextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource ContactsValueTextBlockStyle}">
                                <Setter Property="MaxLines" Value="1"/>
                                <Setter Property="TextTrimming" Value="WordEllipsis"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition x:Name ="NameCol"/>
                            <ColumnDefinition x:Name ="MarginCol" Width="12"/>
                            <ColumnDefinition x:Name ="ContactCol"/>
                            <ColumnDefinition x:Name ="MarginColAgain" Width="12"/>
                            <ColumnDefinition x:Name ="AddressCol"/>
                        </Grid.ColumnDefinitions>
                        <SymbolIcon Grid.Column="0" Symbol="ShowBcc" VerticalAlignment="Top"/>
                        <Grid Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="4"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text ="{x:Bind Name, Mode=OneWay }" Style="{StaticResource NameTextBlockStyle}"/>
                            <TextBlock Grid.Row="2" Text="{x:Bind Description, Mode=OneWay }" Style="{StaticResource DescriptionTextBlockStyle}" MaxLines="2" TextTrimming="WordEllipsis"/>
                        </Grid>
                        <Border BorderThickness="0,0,2,0" BorderBrush="Black" Grid.Column="3" Opacity="0.1" HorizontalAlignment="Center"/>
                        <Grid  x:Name="grdContacts" Grid.Column="4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition x:Name ="rwMargin0" Height="8"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition x:Name ="rwMargin1" Height="8"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="8"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="tblPhoneprp" Grid.Column="0" Grid.Row="0" Text="тел." Style="{StaticResource ContactsLabelTextBlockStyle}"/>
                            <TextBlock x:Name="tblPhonevalue" Grid.Column="2" Grid.Row="0" Text="{x:Bind Phone, Mode=OneWay }"  Style="{StaticResource ContactsValueV0TextBlockStyle}"/>
                            <TextBlock x:Name="tblEmailprp" Grid.Column="0" Grid.Row="2" Text="Email" Style="{StaticResource ContactsLabelTextBlockStyle}"/>
                            <TextBlock x:Name="tblEmailvalue" Grid.Column="2" Grid.Row="2" Text="{x:Bind Email, Mode=OneWay }"  Style="{StaticResource ContactsValueV0TextBlockStyle}"/>
                            <TextBlock x:Name="tblWebprp" Grid.Column="0" Grid.Row="4" Text="Web" Style="{StaticResource ContactsLabelTextBlockStyle}"/>
                            <TextBlock x:Name="tblWebvalue" Grid.Column="2" Grid.Row="4" Text="{x:Bind Web, Mode=OneWay }"  Style="{StaticResource ContactsValueV0TextBlockStyle}"/>
                        </Grid>
                        <Border BorderThickness="0,0,2,0" BorderBrush="Black" Grid.Column="5" Opacity="0.1" HorizontalAlignment="Center"/>
                        <Grid x:Name="grdAddressl0"  Grid.Column="6">
                            <Grid x:Name="grdAddress">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="8"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="Адрес" FontSize="13" FontWeight="SemiBold" Opacity="0.6"/>
                                <TextBlock Grid.Row="2" Text="{x:Bind Address, Mode=OneWay }"  Opacity="0.7" FontSize="13" TextWrapping="Wrap" />
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
            </UserControl>

        </DataTemplate                      >
        <DataTemplate  x:Key="LVIExpandedDataTemplate" x:DataType="local:Contractor">
            <Border BorderThickness="2 2 2 2" BorderBrush="{StaticResource ExpandedBorderBrush}" HorizontalAlignment="Center" Margin="4,8,4,8">
                <UserControl>
                    <Grid Margin="8,8,8,8">
                        <Grid.Resources>
                            <Style x:Key="ContactsValueV1TextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource ContactsValueTextBlockStyle}">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <!--<VisualStateGroup>
                                <VisualState x:Name="HasMvContacts">
                                    <VisualState.StateTriggers>
                                        <local:IsTrueStateTrigger Value="{Binding HasMvContacts, Mode=OneWay}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="clMargin00.Width" Value="8" />
                                        <Setter Target="clMargin02.Width" Value="8" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoHasMvContacts">
                                    <VisualState.StateTriggers>
                                        <local:IsFalseStateTrigger Value="{Binding HasMvContacts, Mode=OneWay}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="clMargin00.Width" Value="0" />
                                        <Setter Target="clMargin02.Width" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="HasPhoto">
                                    <VisualState.StateTriggers>
                                        <local:IsTrueStateTrigger Value="{Binding HasPhoto, Mode=OneWay}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="clMargin01.Width" Value="8" />
                                        <Setter Target="rwMargin00.Height" Value="8" />
                                        <Setter Target="imgPhoto0.Visibility" Value="Visible" />
                                        <Setter Target="imgPhoto1.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoPhoto">
                                    <VisualState.StateTriggers>
                                        <local:IsFalseStateTrigger Value="{Binding HasPhoto, Mode=OneWay}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="clMargin01.Width" Value="0" />
                                        <Setter Target="rwMargin00.Height" Value="0" />
                                        <Setter Target="imgPhoto0.Visibility" Value="Collapsed" />
                                        <Setter Target="imgPhoto1.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="HasPhone">
                                    <VisualState.StateTriggers>
                                        <local:IsTrueStateTrigger Value="{Binding HasPhone, Mode=OneWay}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="rwMargin01.Height" Value="8" />
                                        <Setter Target="rwMargin10.Height" Value="8" />
                                        <Setter Target="tblPhoneprp0.Visibility" Value="Visible" />
                                        <Setter Target="tblPhonevalue0.Visibility" Value="Visible" />
                                        <Setter Target="tblPhoneprp1.Visibility" Value="Visible" />
                                        <Setter Target="tblPhonevalue1.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoPhone">
                                    <VisualState.StateTriggers>
                                        <local:IsFalseStateTrigger Value="{Binding HasPhone, Mode=OneWay}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="rwMargin01.Height" Value="0" />
                                        <Setter Target="rwMargin10.Height" Value="0" />
                                        <Setter Target="tblPhoneprp0.Visibility" Value="Collapsed" />
                                        <Setter Target="tblPhonevalue0.Visibility" Value="Collapsed" />
                                        <Setter Target="tblPhoneprp1.Visibility" Value="Collapsed" />
                                        <Setter Target="tblPhonevalue1.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="HasEmail">
                                    <VisualState.StateTriggers>
                                        <local:IsTrueStateTrigger Value="{Binding HasEmail, Mode=OneWay}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="rwMargin02.Height" Value="8" />
                                        <Setter Target="rwMargin11.Height" Value="8" />
                                        <Setter Target="tblEmailprp0.Visibility" Value="Visible" />
                                        <Setter Target="tblEmailvalue0.Visibility" Value="Visible" />
                                        <Setter Target="tblEmailprp1.Visibility" Value="Visible" />
                                        <Setter Target="tblEmailvalue1.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoEmail">
                                    <VisualState.StateTriggers>
                                        <local:IsFalseStateTrigger Value="{Binding HasEmail, Mode=OneWay}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="rwMargin02.Height" Value="0" />
                                        <Setter Target="rwMargin11.Height" Value="0" />
                                        <Setter Target="tblEmailprp0.Visibility" Value="Collapsed" />
                                        <Setter Target="tblEmailvalue0.Visibility" Value="Collapsed" />
                                        <Setter Target="tblEmailprp1.Visibility" Value="Collapsed" />
                                        <Setter Target="tblEmailvalue1.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>-->
                            <VisualStateGroup>
                                <VisualState x:Name="HasWeb">
                                    <VisualState.StateTriggers>
                                        <local:IsTrueStateTrigger Value="{Binding HasWeb, Mode=OneWay}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="rwMargin03.Height" Value="8" />
                                        <Setter Target="rwMargin12.Height" Value="8" />
                                        <Setter Target="tblWebprp0.Visibility" Value="Visible" />
                                        <Setter Target="tblWebvalue0.Visibility" Value="Visible" />
                                        <Setter Target="tblWebprp1.Visibility" Value="Visible" />
                                        <Setter Target="tblWebvalue1.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoWeb">
                                    <VisualState.StateTriggers>
                                        <local:IsFalseStateTrigger Value="{Binding HasWeb, Mode=OneWay}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="rwMargin03.Height" Value="8" />
                                        <Setter Target="rwMargin12.Height" Value="8" />
                                        <Setter Target="tblWebprp0.Visibility" Value="Collapsed" />
                                        <Setter Target="tblWebvalue0.Visibility" Value="Collapsed" />
                                        <Setter Target="tblWebprp1.Visibility" Value="Collapsed" />
                                        <Setter Target="tblWebvalue1.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="HasAddress">
                                    <VisualState.StateTriggers>
                                        <local:IsTrueStateTrigger Value="{Binding HasAddress, Mode=OneWay}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="rwMargin04.Height" Value="8" />
                                        <Setter Target="rwMargin05.Height" Value="8" />
                                        <Setter Target="rwMargin13.Height" Value="8" />
                                        <Setter Target="rwMargin14.Height" Value="8" />
                                        <Setter Target="tblAddrprp0.Visibility" Value="Visible" />
                                        <Setter Target="tblAddrvalue0.Visibility" Value="Visible" />
                                        <Setter Target="tblAddrprp1.Visibility" Value="Visible" />
                                        <Setter Target="tblAddrvalue1.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoAddress">
                                    <VisualState.StateTriggers>
                                        <local:IsFalseStateTrigger Value="{Binding HasAddress, Mode=OneWay}" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="rwMargin04.Height" Value="0" />
                                        <Setter Target="rwMargin05.Height" Value="0" />
                                        <Setter Target="rwMargin13.Height" Value="0" />
                                        <Setter Target="rwMargin14.Height" Value="0" />
                                        <Setter Target="tblAddrprp0.Visibility" Value="Collapsed" />
                                        <Setter Target="tblAddrvalue0.Visibility" Value="Collapsed" />
                                        <Setter Target="tblAddrprp1.Visibility" Value="Collapsed" />
                                        <Setter Target="tblAddrvalue1.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Target="gSlim.Visibility" Value="Collapsed" />
                                        <Setter Target="gNormal.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="500"/>
                                    </VisualState.StateTriggers>
                                </VisualState>
                                <VisualState x:Name="Slim">
                                    <VisualState.Setters>
                                        <Setter Target="gSlim.Visibility" Value="Visible" />
                                        <Setter Target="gNormal.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="0"/>
                                    </VisualState.StateTriggers>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="12"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <RelativePanel Grid.Row="0" MinWidth="250">
                            <Button RelativePanel.AlignLeftWithPanel="True" Style="{StaticResource ExLviButton}" Margin="-8,0,0,0">
                                <FontIcon Glyph="&#xE112;" Style="{StaticResource ExLviFontIcon}"/>
                            </Button>
                            <Grid RelativePanel.AlignRightWithPanel="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Style="{StaticResource ExLviButton}">
                                    <FontIcon Glyph="&#xE104;" Style="{StaticResource ExLviFontIcon}"/>
                                </Button>
                                <Button Grid.Column="2" Style="{StaticResource ExLviButton}">
                                    <FontIcon Glyph="&#xE107;" Style="{StaticResource ExLviFontIcon}"/>
                                </Button>
                            </Grid>
                        </RelativePanel>
                        <Grid x:Name="gSlim" Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="8"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition x:Name="rwMargin00" Height="8"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition x:Name="rwMargin01" Height="8"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition x:Name="rwMargin02" Height="8"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition x:Name="rwMargin03" Height="8"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition x:Name="rwMargin04" Height="8"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition x:Name="rwMargin05" Height="4"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition x:Name="clMargin00" Width="8" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text ="{x:Bind Name, Mode=OneWay }" Style="{StaticResource NameTextBlockStyle}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"/>
                            <TextBlock Text="{x:Bind Description, Mode=OneWay }" Style="{StaticResource DescriptionTextBlockStyle}" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"/>
                            <Image x:Name="imgPhoto0" Source="{x:Bind Photo, Mode=OneWay}" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center"
                                MaxWidth="200" MaxHeight="400" >
                            </Image>
                            <TextBlock x:Name="tblPhoneprp0" Text="тел." Style="{StaticResource ContactsLabelTextBlockStyle}" Grid.Column="0" Grid.Row="6" />
                            <TextBlock x:Name="tblPhonevalue0" Text="{x:Bind Phone, Mode=OneWay }"  Style="{StaticResource ContactsValueV1TextBlockStyle}" Grid.Column="2" Grid.Row="6"/>
                            <TextBlock x:Name="tblEmailprp0" Text="Email" Style="{StaticResource ContactsLabelTextBlockStyle}" Grid.Column="0" Grid.Row="8"/>
                            <TextBlock x:Name="tblEmailvalue0" Text="{x:Bind Email, Mode=OneWay }"  Style="{StaticResource ContactsValueV1TextBlockStyle}" Grid.Column="2" Grid.Row="8"/>
                            <TextBlock x:Name="tblWebprp0" Text="Web" Style="{StaticResource ContactsLabelTextBlockStyle}" Grid.Column="0" Grid.Row="10" />
                            <TextBlock x:Name="tblWebvalue0" Text="{x:Bind Web, Mode=OneWay }"  Style="{StaticResource ContactsValueV1TextBlockStyle}" Grid.Column="2" Grid.Row="10"/>
                            <TextBlock x:Name="tblAddrprp0" Text="Адрес" Style="{StaticResource ContactsLabelTextBlockStyle}" Grid.Row="12" Grid.Column="0"/>
                            <TextBlock x:Name="tblAddrvalue0" Text="{x:Bind Address, Mode=OneWay }"  Style="{StaticResource ContactsValueV1TextBlockStyle}" Grid.Row="14" Grid.Column="0" Grid.ColumnSpan="3"/>
                        </Grid>
                        <Grid x:Name="gNormal" Grid.Row="3" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition x:Name="clMargin01" Width="8" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Image x:Name="imgPhoto1" Source="{x:Bind Photo, Mode=OneWay}" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                MaxWidth="300" MaxHeight="400" >
                            </Image>
                            <Grid Grid.Column="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="8"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition x:Name="rwMargin10" Height="8"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition x:Name="rwMargin11" Height="8"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition x:Name="rwMargin12" Height="8"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition x:Name="rwMargin13" Height="8"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition x:Name="rwMargin14" Height="4"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition x:Name="clMargin02" Width="8" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text ="{x:Bind Name, Mode=OneWay }" Style="{StaticResource NameTextBlockStyle}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"/>
                                <TextBlock Text="{x:Bind Description, Mode=OneWay }" Style="{StaticResource DescriptionTextBlockStyle}" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"/>
                                <TextBlock x:Name="tblPhoneprp1" Text="тел." Style="{StaticResource ContactsLabelTextBlockStyle}" Grid.Column="0" Grid.Row="4" />
                                <TextBlock x:Name="tblPhonevalue1" Text="{x:Bind Phone, Mode=OneWay }"  Style="{StaticResource ContactsValueV1TextBlockStyle}" Grid.Column="2" Grid.Row="4"/>
                                <TextBlock x:Name="tblEmailprp1" Text="Email" Style="{StaticResource ContactsLabelTextBlockStyle}" Grid.Column="0" Grid.Row="6"/>
                                <TextBlock x:Name="tblEmailvalue1" Text="{x:Bind Email, Mode=OneWay }"  Style="{StaticResource ContactsValueV1TextBlockStyle}" Grid.Column="2" Grid.Row="6"/>
                                <TextBlock x:Name="tblWebprp1" Text="Web" Style="{StaticResource ContactsLabelTextBlockStyle}" Grid.Column="0" Grid.Row="8" />
                                <TextBlock x:Name="tblWebvalue1" Text="{x:Bind Web, Mode=OneWay }"  Style="{StaticResource ContactsValueV1TextBlockStyle}" Grid.Column="2" Grid.Row="8"/>
                                <TextBlock x:Name="tblAddrprp1" Text="Адрес" Style="{StaticResource ContactsLabelTextBlockStyle}" Grid.Row="10" Grid.Column="0"/>
                                <TextBlock x:Name="tblAddrvalue1" Text="{x:Bind Address, Mode=OneWay }"  Style="{StaticResource ContactsValueV1TextBlockStyle}" Grid.Row="12" Grid.Column="0" Grid.ColumnSpan="3"/>
                            </Grid>
                        </Grid>
                    </Grid>
                </UserControl>
            </Border>
        </DataTemplate>
        <Storyboard x:Name="StoryboardFindedListViewItem">
            <ColorAnimation  Storyboard.TargetProperty="(ListViewItem.Background).(SolidColorBrush.Color)" To="#0078d7" Duration="0:0:0.2" 
                             AutoReverse="True"/>
            <ColorAnimation  Storyboard.TargetProperty="(ListViewItem.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0.2"
                             AutoReverse="True"/>
        </Storyboard>
    </Page.Resources>
    <Grid>
        <Grid x:Name="Overlay" Canvas.ZIndex="10" Visibility="Collapsed" KeyDown="popUp_KeyDown" IsHitTestVisible="True" Tapped="Overlay_Tapped">
            <Grid.Background>
                <SolidColorBrush Color="White" Opacity="0.5"/>
            </Grid.Background>
        </Grid>
        <UserControl>
            <Grid x:Name="gRoot" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="12,0,12,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Target="TitleTextBlock.Visibility" Value="Visible" />
                                <Setter Target="SearchBox.HorizontalAlignment" Value="Stretch" />
                                <Setter Target="SearchBox.Margin" Value="0,24,0,0" />
                                <Setter Target="SearchBox.Width" Value="300" />
                                <Setter Target="AddButtonLIstView.Visibility" Value="Collapsed" />
                                <Setter Target="AddButton.Visibility" Value="Visible" />
                            </VisualState.Setters>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="500"/>
                            </VisualState.StateTriggers>
                        </VisualState>
                        <VisualState x:Name="Slim">
                            <VisualState.Setters>
                                <Setter Target="TitleTextBlock.Visibility" Value="Collapsed" />
                                <Setter Target="SearchBox.HorizontalAlignment" Value="Stretch" />
                                <Setter Target="SearchBox.Margin" Value="0,12,0,0" />
                                <Setter Target="AddButtonLIstView.Visibility" Value="Visible" />
                                <Setter Target="AddButton.Visibility" Value="Collapsed" />
                            </VisualState.Setters>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="0"/>
                            </VisualState.StateTriggers>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Popup x:Name="popUp" Opened="popUp_Opened" Closed="popUp_Closed" KeyDown="popUp_KeyDown">
                    <Popup.Resources>
                        <Style x:Name="popupAnnotationTextBlockStyle" TargetType="TextBlock">
                            <Setter Property="Foreground" Value="#FF656565"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="FontSize" Value="14.5"/>
                        </Style>
                    </Popup.Resources>
                    <UserControl>
                        <Grid>
                            <Grid x:Name="OverlayPoup" Canvas.ZIndex="10" Visibility="Collapsed" IsTapEnabled="True">
                                <Grid.Background>
                                    <SolidColorBrush Color="White" Opacity="0.5"/>
                                </Grid.Background>
                            </Grid>
                            <UserControl>
                                <Grid x:Name="popUpRoot" MaxWidth="700" MaxHeight="600" Loaded="PopUpRoot_Loaded" SizeChanged="popUpRoot_SizeChanged">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="WidthDependencyPPMZ">
                                        <VisualState x:Name="WidePPMZ">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="500"/>
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="borderPopup.BorderThickness" Value="8 16 8 16" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="SlimPPMZ">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="0"/>
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="borderPopup.BorderThickness" Value="0 16 0 16" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="borderPopup" BorderBrush="White" BorderThickness="0 16 0 16">
                                        <Border BorderBrush="#0078d7" BorderThickness="2 2 2 2">
                                            <UserControl>
                                                <Grid Background="{ThemeResource ContentDialogBackground}">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="WidthDependencyPP">
                                                            <VisualState x:Name="WidePP">
                                                                <VisualState.StateTriggers>
                                                                    <AdaptiveTrigger MinWindowWidth="500"/>
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Target="btnBack.(Grid.Column)" Value="0" />
                                                                    <Setter Target="btnEdit.(Grid.Column)" Value="0" />
                                                                    <Setter Target="btnEdit.(Grid.Row)" Value="1" />
                                                                    <Setter Target="btnEdit.Background" Value="{ThemeResource SystemControlBackgroundChromeMediumBrush}" />
                                                                    <Setter Target="btnDelete.(Grid.Column)" Value="0" />
                                                                    <Setter Target="btnDelete.(Grid.Row)" Value="2" />
                                                                    <Setter Target="btnDelete.Background" Value="{ThemeResource SystemControlBackgroundChromeMediumBrush}" />
                                                                    <Setter Target="likeCommandBar.Visibility" Value="Visible" />
                                                                    <Setter Target="popUpl0.Margin" Value="12,4,12,12" />
                                                                    <Setter Target="imgbrd1.Visibility" Value="Visible" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                            <VisualState x:Name="SlimPP">
                                                                <VisualState.StateTriggers>
                                                                    <AdaptiveTrigger MinWindowWidth="0"/>
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Target="btnBack.(Grid.Column)" Value="1" />
                                                                    <Setter Target="btnEdit.(Grid.Column)" Value="4" />
                                                                    <Setter Target="btnEdit.(Grid.Row)" Value="0" />
                                                                    <Setter Target="btnEdit.Background" Value="Transparent" />
                                                                    <Setter Target="btnDelete.(Grid.Column)" Value="5" />
                                                                    <Setter Target="btnDelete.(Grid.Row)" Value="0" />
                                                                    <Setter Target="btnDelete.Background" Value="Transparent" />
                                                                    <Setter Target="likeCommandBar.Visibility" Value="Collapsed" />
                                                                    <Setter Target="popUpl0.Margin" Value="12,12,12,12" />
                                                                    <Setter Target="imgbrd1.Visibility" Value="Collapsed" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup>
                                                            <VisualState x:Name="HasPhoto1">
                                                                <VisualState.StateTriggers>
                                                                    <local:IsTrueStateTrigger Value="{Binding HasPhoto, Mode=OneWay}" />
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Target="imgbrd1A.Visibility" Value="Visible" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                            <VisualState x:Name="NoPhoto1">
                                                                <VisualState.StateTriggers>
                                                                    <local:IsFalseStateTrigger Value="{Binding HasPhoto, Mode=OneWay}" />
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Target="imgbrd1A.Visibility" Value="Collapsed" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition x:Name="g0c0" Width="Auto"/>
                                                        <ColumnDefinition x:Name="g0c1" Width="Auto"/>
                                                        <ColumnDefinition x:Name="g0c2" Width="Auto"/>
                                                        <ColumnDefinition x:Name="g0c3" Width="*"/>
                                                        <ColumnDefinition x:Name="g0c4" Width="Auto"/>
                                                        <ColumnDefinition x:Name="g0c5" Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition x:Name="g0r0" Height="Auto"/>
                                                        <RowDefinition x:Name="g0r1" Height="Auto"/>
                                                        <RowDefinition x:Name="g0r2" Height="Auto"/>
                                                        <RowDefinition x:Name="g0r3" Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Button x:Name="btnBack"  Grid.Column="1" Grid.Row="0" Click="btnBack_Click" TabIndex="0" IsTabStop="True">
                                                        <FontIcon Glyph="&#xE112;" FontSize="20"/>
                                                        <ToolTipService.ToolTip>
                                                            <ToolTip>
                                                                <TextBlock Text="Назад, к списку"/>
                                                            </ToolTip>
                                                        </ToolTipService.ToolTip>
                                                    </Button>
                                                    <Border Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="0" HorizontalAlignment="Center">
                                                        <TextBlock x:Name="txtCaption" Text="Контрагент" VerticalAlignment="Center" Margin="4,0,4,0"/>
                                                    </Border>
                                                    <Button x:Name="btnEdit" Grid.Column="4" Grid.Row="0" Background="Transparent" Click="btnEdit_Click">
                                                        <FontIcon Glyph="&#xE104;" FontSize="20" />
                                                        <ToolTipService.ToolTip>
                                                            <ToolTip>
                                                                <TextBlock Text="Изменить"/>
                                                            </ToolTip>
                                                        </ToolTipService.ToolTip>
                                                    </Button>
                                                    <Button x:Name="btnDelete" Grid.Column="5" Grid.Row="0" Background="Transparent" Click="btnDelete_Click">
                                                        <FontIcon Glyph="&#xE107;" FontSize="20"/>
                                                        <ToolTipService.ToolTip>
                                                            <ToolTip>
                                                                <TextBlock Text="Удалить"/>
                                                            </ToolTip>
                                                        </ToolTipService.ToolTip>
                                                    </Button>
                                                    <Border x:Name="likeCommandBar" Grid.Column="0" Grid.Row="3" Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"/>
                                                    <UserControl Grid.Column="1" Grid.ColumnSpan="5" Grid.Row="1" Grid.RowSpan="3">
                                                        <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto" Style="{StaticResource ImpScrollViewStyle}">
                                                            <Grid x:Name="popUpl0" Margin="0,12,0,0">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition x:Name="g1c0" Width="Auto"/>
                                                                    <ColumnDefinition x:Name="g1c1" Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition x:Name="g1r0" Height="*"/>
                                                                </Grid.RowDefinitions>
                                                                <Grid x:Name="imgbrd1A" Grid.Column="0" >
                                                                    <Border x:Name="imgbrd1" BorderThickness="4 4 4 4" Margin="0,0,12,0" BorderBrush="{ThemeResource TextControlBorderBrush}"
                                                                            Background="LightGray" VerticalAlignment="Top" HorizontalAlignment="Left">
                                                                        <Viewbox x:Name ="vbx1" StretchDirection="DownOnly"  VerticalAlignment="Top" HorizontalAlignment="Left">
                                                                            <Image x:Name="img1" Source="{Binding Photo, Mode=OneWay}" FlyoutBase.AttachedFlyout="{StaticResource ImagePreviewFlyout}"
                                                                                    Tapped="img_Tapped" IsTapEnabled="true">
                                                                                <ToolTipService.ToolTip>
                                                                                    <ToolTip>
                                                                                        <TextBlock Text="Нажмите чтобы увеличить"/>
                                                                                    </ToolTip>
                                                                                </ToolTipService.ToolTip>
                                                                            </Image>
                                                                        </Viewbox>
                                                                    </Border>
                                                                </Grid>
                                                                <UserControl Grid.Column="1" Grid.Row="0">
                                                                    <Grid x:Name="popUpl1" MaxWidth="400" MinWidth="240">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="WidthDependencyPPl1">
                                                                                <VisualState x:Name="WidePPl1">
                                                                                    <VisualState.StateTriggers>
                                                                                        <AdaptiveTrigger MinWindowWidth="500"/>
                                                                                    </VisualState.StateTriggers>
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="txtPhoneNot.(Grid.Column)" Value="0" />
                                                                                        <Setter Target="txtPhoneNot.(Grid.Row)" Value="4" />
                                                                                        <Setter Target="txtPhoneNot.(Grid.Margin)" Value="0,8,8,0" />
                                                                                        <Setter Target="txtEmailNot.(Grid.Column)" Value="0" />
                                                                                        <Setter Target="txtEmailNot.(Grid.Row)" Value="6" />
                                                                                        <Setter Target="txtEmailNot.(Grid.Margin)" Value="0,8,8,0" />
                                                                                        <Setter Target="txtWebNot.(Grid.Column)" Value="0" />
                                                                                        <Setter Target="txtWebNot.(Grid.Row)" Value="8" />
                                                                                        <Setter Target="txtWebNot.(Grid.Margin)" Value="0,8,8,0" />
                                                                                        <Setter Target="imgbrd2.Visibility" Value="Collapsed" />
                                                                                    </VisualState.Setters>
                                                                                </VisualState>
                                                                                <VisualState x:Name="SlimPPl1">
                                                                                    <VisualState.StateTriggers>
                                                                                        <AdaptiveTrigger MinWindowWidth="0"/>
                                                                                    </VisualState.StateTriggers>
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="txtPhoneNot.(Grid.Column)" Value="1" />
                                                                                        <Setter Target="txtPhoneNot.(Grid.Row)" Value="3" />
                                                                                        <Setter Target="txtPhoneNot.(Grid.Margin)" Value="0,8,0,0" />
                                                                                        <Setter Target="txtEmailNot.(Grid.Column)" Value="1" />
                                                                                        <Setter Target="txtEmailNot.(Grid.Row)" Value="5" />
                                                                                        <Setter Target="txtEmailNot.(Grid.Margin)" Value="0,8,0,0" />
                                                                                        <Setter Target="txtWebNot.(Grid.Column)" Value="1" />
                                                                                        <Setter Target="txtWebNot.(Grid.Row)" Value="7" />
                                                                                        <Setter Target="txtWebNot.(Grid.Margin)" Value="0,8,0,0" />
                                                                                        <Setter Target="imgbrd2.Visibility" Value="Visible" />
                                                                                    </VisualState.Setters>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                            <VisualStateGroup>
                                                                                <VisualState x:Name="HasPhone">
                                                                                    <VisualState.StateTriggers>
                                                                                        <local:IsTrueStateTrigger Value="{Binding HasPhone, Mode=OneWay}" />
                                                                                    </VisualState.StateTriggers>
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="txtPhoneNot.Visibility" Value="Visible" />
                                                                                        <Setter Target="txtPhoneVal.Visibility" Value="Visible" />
                                                                                    </VisualState.Setters>
                                                                                </VisualState>
                                                                                <VisualState x:Name="NoPhone">
                                                                                    <VisualState.StateTriggers>
                                                                                        <local:IsFalseStateTrigger Value="{Binding HasPhone, Mode=OneWay}" />
                                                                                    </VisualState.StateTriggers>
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="txtPhoneNot.Visibility" Value="Collapsed" />
                                                                                        <Setter Target="txtPhoneVal.Visibility" Value="Collapsed" />
                                                                                    </VisualState.Setters>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                            <VisualStateGroup>
                                                                                <VisualState x:Name="HasEmail">
                                                                                    <VisualState.StateTriggers>
                                                                                        <local:IsTrueStateTrigger Value="{Binding HasEmail, Mode=OneWay}" />
                                                                                    </VisualState.StateTriggers>
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="txtEmailNot.Visibility" Value="Visible" />
                                                                                        <Setter Target="txtEmailVal.Visibility" Value="Visible" />
                                                                                    </VisualState.Setters>
                                                                                </VisualState>
                                                                                <VisualState x:Name="NoEmail">
                                                                                    <VisualState.StateTriggers>
                                                                                        <local:IsFalseStateTrigger Value="{Binding HasEmail, Mode=OneWay}" />
                                                                                    </VisualState.StateTriggers>
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="txtEmailNot.Visibility" Value="Collapsed" />
                                                                                        <Setter Target="txtEmailVal.Visibility" Value="Collapsed" />
                                                                                    </VisualState.Setters>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                            <VisualStateGroup>
                                                                                <VisualState x:Name="HasWeb">
                                                                                    <VisualState.StateTriggers>
                                                                                        <local:IsTrueStateTrigger Value="{Binding HasWeb, Mode=OneWay}" />
                                                                                    </VisualState.StateTriggers>
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="txtWebNot.Visibility" Value="Visible" />
                                                                                        <Setter Target="txtWebVal.Visibility" Value="Visible" />
                                                                                    </VisualState.Setters>
                                                                                </VisualState>
                                                                                <VisualState x:Name="NoWeb">
                                                                                    <VisualState.StateTriggers>
                                                                                        <local:IsFalseStateTrigger Value="{Binding HasWeb, Mode=OneWay}" />
                                                                                    </VisualState.StateTriggers>
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="txtWebNot.Visibility" Value="Collapsed" />
                                                                                        <Setter Target="txtWebVal.Visibility" Value="Collapsed" />
                                                                                    </VisualState.Setters>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                            <VisualStateGroup>
                                                                                <VisualState x:Name="HasAddress">
                                                                                    <VisualState.StateTriggers>
                                                                                        <local:IsTrueStateTrigger Value="{Binding HasAddress, Mode=OneWay}" />
                                                                                    </VisualState.StateTriggers>
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="txtAddressNot.Visibility" Value="Visible" />
                                                                                        <Setter Target="txtAddressVal.Visibility" Value="Visible" />
                                                                                    </VisualState.Setters>
                                                                                </VisualState>
                                                                                <VisualState x:Name="NoAddress">
                                                                                    <VisualState.StateTriggers>
                                                                                        <local:IsFalseStateTrigger Value="{Binding HasAddress, Mode=OneWay}" />
                                                                                    </VisualState.StateTriggers>
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="txtAddressNot.Visibility" Value="Collapsed" />
                                                                                        <Setter Target="txtAddressVal.Visibility" Value="Collapsed" />
                                                                                    </VisualState.Setters>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                            <VisualStateGroup x:Name="HasPhoto2V">
                                                                                <VisualState x:Name="HasPhoto2">
                                                                                    <VisualState.StateTriggers>
                                                                                        <local:IsTrueStateTrigger Value="{Binding HasPhoto, Mode=OneWay}" />
                                                                                    </VisualState.StateTriggers>
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="imgbrd2A.Visibility" Value="Visible" />
                                                                                    </VisualState.Setters>
                                                                                </VisualState>
                                                                                <VisualState x:Name="NoPhoto2">
                                                                                    <VisualState.StateTriggers>
                                                                                        <local:IsFalseStateTrigger Value="{Binding HasPhoto, Mode=OneWay}" />
                                                                                    </VisualState.StateTriggers>
                                                                                    <VisualState.Setters>
                                                                                        <Setter Target="imgbrd2A.Visibility" Value="Collapsed" />
                                                                                    </VisualState.Setters>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                            <RowDefinition Height="Auto"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Border  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Background="#FFDFDFDF" Padding="4,0,4,0">
                                                                            <TextBlock TextWrapping="Wrap" Text="{Binding Name, Mode=OneWay}" FontSize="16"  FontWeight="SemiBold" VerticalAlignment="Center"/>
                                                                        </Border>
                                                                        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" Margin="0,8,0,0">
                                                                            <FontIcon Glyph="&#xE937;" FontSize="15" Foreground="#FF858585"/>
                                                                            <TextBlock TextWrapping="Wrap" Text="{Binding Description, Mode=OneWay}"/>
                                                                        </StackPanel>
                                                                        <Grid x:Name="imgbrd2A" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                                                                            <Border x:Name="imgbrd2" BorderThickness="4 4 4 4" Margin="0,8,0,4" BorderBrush="{ThemeResource TextControlBorderBrush}"
                                                                                    Background="LightGray" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                                                <Viewbox x:Name ="vbx2" StretchDirection="DownOnly">
                                                                                    <Image x:Name="img2" Source="{Binding Photo, Mode=OneWay}"  FlyoutBase.AttachedFlyout="{StaticResource ImagePreviewFlyout}"
                                                                                        Tapped="img_Tapped" IsTapEnabled="true" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                        <ToolTipService.ToolTip>
                                                                                            <ToolTip>
                                                                                                <TextBlock Text="Нажмите чтобы увеличить"/>
                                                                                            </ToolTip>
                                                                                        </ToolTipService.ToolTip>
                                                                                    </Image>
                                                                                </Viewbox>
                                                                            </Border>
                                                                        </Grid>
                                                                        <TextBlock x:Name="txtPhoneNot" Grid.Row="3" Grid.Column="1" Text="Тел." Margin="0,8,0,8"
                                                                    Style="{StaticResource popupAnnotationTextBlockStyle}"/>
                                                                        <TextBlock x:Name="txtPhoneVal" Grid.Row="4" Grid.Column="1" TextWrapping="Wrap" Text="{Binding Phone, Mode=OneWay}" Margin="0,8,0,0"
                                                                       IsTextSelectionEnabled="True"/>
                                                                        <TextBlock x:Name="txtEmailNot" Grid.Row="5" Grid.Column="1" Text="Email" Margin="0,8,0,8"
                                                                    Style="{StaticResource popupAnnotationTextBlockStyle}"/>
                                                                        <TextBlock x:Name="txtEmailVal" Grid.Row="6" Grid.Column="1" TextWrapping="Wrap" Text="{Binding Email, Mode=OneWay}" Margin="0,8,0,0"
                                                                    IsTextSelectionEnabled="True"/>
                                                                        <TextBlock x:Name="txtWebNot" Grid.Row="7" Grid.Column="1" Text="Web" Margin="0,8,0,8"
                                                                    Style="{StaticResource popupAnnotationTextBlockStyle}"/>
                                                                        <TextBlock x:Name="txtWebVal" Grid.Row="8" Grid.Column="1" TextWrapping="Wrap" Text="{Binding Web, Mode=OneWay}" Margin="0,8,0,0"
                                                                    IsTextSelectionEnabled="True"/>
                                                                        <TextBlock x:Name="txtAddressNot" Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="3" Text="Адрес" Margin="0,8,0,0"
                                                                    Style="{StaticResource popupAnnotationTextBlockStyle}" IsTextSelectionEnabled="True"/>
                                                                        <TextBlock x:Name="txtAddressVal" Grid.Row="10" Grid.Column="0" Grid.ColumnSpan="3" TextWrapping="Wrap" Text="{Binding Address, Mode=OneWay}" Margin="0,8,0,0"/>
                                                                    </Grid>
                                                                </UserControl>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </UserControl>
                                                </Grid>
                                            </UserControl>
                                        </Border>
                                    </Border>
                            </Grid>
                            </UserControl>
                        </Grid>
                    </UserControl>
                </Popup>
                <TextBlock x:Name="TitleTextBlock" Text="Контрагенты" HorizontalAlignment="Center" FontSize="16" Margin="0,12,0,0" Grid.Row="0"/>
                <AutoSuggestBox x:Name ="SearchBox" QueryIcon="Find" PlaceholderText="Поиск" Grid.Row="1" QuerySubmitted="SearchBox_QuerySubmitted" 
                                TextChanged="SearchBox_TextChanged" TextMemberPath="Name" DisplayMemberPath="Name" LostFocus="SearchBox_LostFocus">
                    <ToolTipService.ToolTip>
                        <ToolTip Content="Совпадений не найдено" IsEnabled="False" Placement="Bottom"/>
                    </ToolTipService.ToolTip>
                </AutoSuggestBox>
                <ListView x:Name ="AddButtonLIstView" IsItemClickEnabled="True" Margin="-4,12,0,0" SelectionMode="Single" Grid.Row="2" ItemClick="AddButtonLIstView_ItemClick">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Padding" Value="4,4,4,4"/>
                            <Setter Property="MinHeight" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <ListViewItemPresenter 
                                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                                          SelectionCheckMarkVisualEnabled="true"
                                                          CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                          CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                                          DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                                          DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                                          FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}"
                                                          FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                                          PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"                                                  
                                                          PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                                                          PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}"         
                                                          SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                                                          PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                                                          SelectedPressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                                                          DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                                          DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                                          ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          ContentMargin="{TemplateBinding Padding}"
                                                          CheckMode="Inline"/>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="x:String">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="12"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Background="LightGray" Padding="4,4,4,4">
                                    <FontIcon Glyph="&#xE109;" Style="{StaticResource ExLviFontIcon}"/>
                                </Border>
                                <TextBlock Grid.Column="2" Text="{x:Bind}" FontSize="13" Opacity="0.9" VerticalAlignment="Top"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <x:String>Добавить контрагента</x:String>
                </ListView>
                <Button x:Name ="AddButton" HorizontalAlignment="Center" Margin="0,8,0,0" Grid.Row="3" Click="AddButton_Click">
                    <TextBlock Text="Добавить контрагента">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="#0078d7" />
                        </TextBlock.Foreground>
                    </TextBlock>
                    <Button.Background>
                        <SolidColorBrush Opacity="0" />
                    </Button.Background>
                </Button>
                <ListView x:Name="ItemsListView" ItemsSource="{x:Bind Items}" Grid.Row="4" Margin="-4,12,0,0" ItemContainerStyle="{StaticResource ListViewItemNormalStyle}" 
                         ItemTemplate="{StaticResource NormalListViewItemTemplate}" ItemClick="ItemsListView_ItemClick"
                         IsItemClickEnabled="True" Style="{StaticResource ImpListviewStyle}" SelectionMode="None"  IsSwipeEnabled="False"/>
            </Grid>
        </UserControl>
    </Grid>
</Page>
